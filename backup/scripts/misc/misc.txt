
SOURCE /home/user/masterswebdev2/scripts/sqlStuff/TaskTracker.sql;
SHOW CREATE PROCEDURE TaskTracker.AuthenticateUserByEmailOrUsername;

npm run dev
/home/user/masterswebdev2/mysql-project-idx/start.sh

USE TaskTracker;

lsof -i :3000

app.use(cors({
    origin: ['http://localhost:5173'], // Allow requests from this origin
    credentials: true, // Enable sending cookies with the request
}));

How It Should Work Now:

User Logs In:
The user enters their credentials and submits the login form.
handleLoginSubmit in registerLogin.js sends the request to /api/login.
Server Authenticates:
The server authenticates the user, validates the session and sets the cookie.
Client Redirects:
If authentication is successful, handleLoginSubmit will now execute:
window.location.href = "/tasks";
/tasks Route is Hit:
The browser navigates to /tasks.
Session Check:
The sessionMiddleware in app.js runs because /tasks is a protected route.
If the session is valid, the request passes through.
Render Tasks Page:
app.get("/tasks", ...) is executed.
res.render("tasks"); renders the tasks.ejs view.
Frontend Makes /api/tasks Request:
The frontend makes a request to /api/tasks to get the tasks data.
Display Data
The tasks data is displayed to the user.